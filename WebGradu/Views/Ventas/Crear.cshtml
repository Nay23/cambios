@{
    ViewData["Title"] = "Crear Venta";

    if (User.IsInRole("Admin"))
    {
        Layout = "~/Views/Shared/_Plantilla.cshtml";
    }
    else if (User.IsInRole("Vendedor"))
    {
        Layout = "~/Views/Shared/_Vendedor.cshtml";
    }
}

<h1>Crear Venta</h1>

<form asp-action="Crear" method="post">
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="CodigoProducto">Código del Producto</label>
                        <input type="text" class="form-control" id="CodigoProducto" name="CodigoProducto" />
                    </div>

                    <div class="form-group">
                        <label for="PrecioUnitario">Precio Unitario</label>
                        <input type="number" step="0.01" class="form-control" id="PrecioUnitario" name="PrecioUnitario" readonly />
                    </div>

                    <div class="form-group">
                        <label for="Cantidad">Cantidad</label>
                        <input type="number" class="form-control" id="Cantidad" name="Cantidad" />
                    </div>
                    <br />

                    <div class="form-group text-center">
                        <button type="button" id="btnAgregar" class="btn btn-primary btn-lg">
                            <i class="bi bi-plus"></i> Agregar Otro
                        </button>
                        <button type="submit" class="btn btn-success btn-lg">Registrar Venta</button>
                    </div>
                </div>

                <div class="col-md-6">
                    <h3>Productos Agregados</h3>
                    <table class="table table-hover" style="font-size: 1.1rem; width: 100%;">
                        <thead style="background-color: rgba(23, 162, 184, 0.5);">
                            <tr>
                                <th>Código</th>
                                <th>Precio Unitario</th>
                                <th>Cantidad</th>
                                <th>Subtotal</th>
                                <th style="text-align: center;">Acciones</th> <!-- Alineación centrada para encabezado -->
                            </tr>
                        </thead>
                        <tbody id="productosAgregados">
                            <!-- Aquí se agregarán las filas con los productos seleccionados -->
                        </tbody>
                    </table>

                    <div class="form-group">
                        <label for="Total">Total</label>
                        <input type="number" step="0.01" class="form-control" id="Total" name="Total" readonly />
                    </div>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" name="detalles" id="detalles" />
</form>

<!-- Script de SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

@section Scripts {
    <script>
        $(document).ready(function () {
            let listaDetalles = [];

            $('#CodigoProducto').on('blur', function () {
                var codigo = $(this).val();
                $.getJSON('@Url.Action("GetPrecioPorCodigo", "Ventas")', { codigo: codigo }, function (data) {
                    $('#PrecioUnitario').val(data.precio.toFixed(2)); // Mostrar el precio con decimales
                });
            });

            $('#btnAgregar').click(function () {
                var codigo = $('#CodigoProducto').val();
                var precio = $('#PrecioUnitario').val();
                var cantidad = $('#Cantidad').val();

                if (codigo && precio && cantidad) {
                    var subtotal = (parseFloat(precio) * parseInt(cantidad)).toFixed(2);
                    $('#productosAgregados').append(
                        `<tr>
                            <td>${codigo}</td>
                            <td>${parseFloat(precio).toFixed(2)}</td>
                            <td><input type="number" class="form-control cantidad" value="${cantidad}" disabled /></td>
                            <td>${subtotal}</td>
                            <td style="text-align: center;"> 
                            <div style="display: flex; justify-content: center; align-items: center;">
                                <button type="button" class="btn btn-info btn-sm btnEditar" style="font-size: 1rem; padding: 0.5rem; margin-right: 0.5rem;">
                                    <i class="bi bi-pencil"></i> 
                                </button>
                                <button type="button" class="btn btn-danger btn-sm btnEliminar" style="font-size: 1rem; padding: 0.5rem;">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>

                        </tr>`
                    );

                    listaDetalles.push({
                        CodigoProducto: codigo,
                        PrecioUnitario: parseFloat(precio),
                        Cantidad: parseInt(cantidad),
                        SubTotal: parseFloat(subtotal)
                    });

                    actualizarTotal();
                    limpiarCampos();
                } else {
                    alert("Por favor, completa todos los campos.");
                }
            });

            // Evento para eliminar producto de la tabla
            $(document).on('click', '.btnEliminar', function () {
                $(this).closest('tr').remove();
                actualizarListaDetalles();
                actualizarTotal();
            });

            // Evento para editar cantidad
            $(document).on('click', '.btnEditar', function () {
                var row = $(this).closest('tr');
                var cantidadInput = row.find('.cantidad');

                if (cantidadInput.prop('disabled')) {
                    // Cambiar el texto del botón a "Guardar"
                    $(this).html('<i class="fa-regular fa-floppy-disk"></i>'); // Cambiar el icono a "Guardar"
                    cantidadInput.prop('disabled', false).focus();
                } else {
                    // Actualizar el subtotal
                    var cantidad = cantidadInput.val();
                    var precio = parseFloat(row.find('td:eq(1)').text());
                    var subtotal = (precio * cantidad).toFixed(2);
                    row.find('td:eq(3)').text(subtotal);

                    // Actualizar listaDetalles
                    actualizarListaDetalles();
                    actualizarTotal();
                    cantidadInput.prop('disabled', true);
                    $(this).html('<i class="bi bi-pencil"></i> '); // Cambiar de nuevo a "Editar"
                }
            });

            // Deshabilitar el envío del formulario al presionar "Enter"
            $('form').on('keypress', function (e) {
                if (e.which === 13) {
                    e.preventDefault();
                }
            });

            $('form').on('submit', function () {
                if (listaDetalles.length === 0) {
                    alert("Debe agregar al menos un producto antes de registrar la venta.");
                    return false;
                }

                $('#detalles').val(JSON.stringify(listaDetalles));
            });

            function actualizarTotal() {
                var total = listaDetalles.reduce((sum, item) => sum + item.SubTotal, 0).toFixed(2);
                $('#Total').val(total);
            }

            function limpiarCampos() {
                $('#CodigoProducto').val('');
                $('#PrecioUnitario').val('');
                $('#Cantidad').val('');
            }

            function actualizarListaDetalles() {
                listaDetalles = [];
                $('#productosAgregados tr').each(function () {
                    var codigo = $(this).find('td:eq(0)').text();
                    var precio = parseFloat($(this).find('td:eq(1)').text());
                    var cantidad = parseInt($(this).find('.cantidad').val());
                    var subtotal = parseFloat($(this).find('td:eq(3)').text());
                    
                    listaDetalles.push({
                        CodigoProducto: codigo,
                        PrecioUnitario: precio,
                        Cantidad: cantidad,
                        SubTotal: subtotal
                    });
                });
            }

            // Mostrar la alerta si TempData["VentaCreada"] está presente
        @if (TempData["VentaCreada"] != null)
{
         <text>
                $(function () {
                    Swal.fire({
                        title: 'Venta Creada',
                        text: '@TempData["VentaCreada"]',
                        icon: 'success',
                        confirmButtonText: 'OK'
                    });
                });
            </text>
        }
        else if (TempData["Error"] != null)
        {
            <text>
                $(function () {
                    Swal.fire({
                        title: 'No se registró la Venta',
                        text: '@TempData["Error"]',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                });
            </text>
        }

        });
    </script>
}
