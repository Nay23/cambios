@model IEnumerable<WebGradu.Models.Caja>

@{
    ViewData["Title"] = "Cuadres de Ventas";
    Layout = "~/Views/Shared/_Plantilla.cshtml";
}

<center><h1>Cuadres de Ventas</h1></center>

<div class="card mb-4">
    <div class="card-header">
        <h5>Realizar Cuadre</h5>
    </div>

    <div class="card-body">
        <form id="realizarCuadreForm" method="post" asp-action="RealizarCuadre">
            <div class="form-row">
                <div class="row mb-2">
                    <!-- Espacio reducido entre las fechas -->
                    <div class="col-md-6">
                        <label for="fechaInicio">Fecha Inicio</label>
                        <input type="date" name="fechaInicio" id="fechaInicio" class="form-control" required />
                    </div>
                    <div class="col-md-6">
                        <label for="fechaFin">Fecha Fin</label>
                        <input type="date" name="fechaFin" id="fechaFin" class="form-control" />
                        <small class="form-text text-muted">Dejar en blanco si es un cuadre diario.</small>
                    </div>
                </div>
            </div>
            <div class="form-group mb-1">
            
                <label for="dineroEfectivo">Dinero Efectivo</label>
                <input type="number" step="0.01" name="dineroEfectivo" id="dineroEfectivo" class="form-control" style="max-width: 500px;" required />
            </div>

            <button type="submit" class="btn btn-primary">Realizar Cuadre</button>
        </form>
    </div> <!-- Cierre de card-body -->
</div> <!-- Cierre de card -->





<h2>Historial de Cuadres</h2>

<div class="table-responsive">
    <table id="cuadreTable" class="table">
        <thead>
            <tr>
                <th>Fecha Cuadre</th>
                <th>Total Ventas</th>
                <th>Tipo Cuadre</th>
                <th>Usuario</th>
                <th>Dinero Efectivo</th>
                <th>Estado Cuadre</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var caja in Model)
            {
                <tr data-id="@caja.Id" class="cuadre-row">
                    <td>@caja.FechaCuadre.ToString("dd/MM/yyyy")</td>
                    <td>@caja.TotalVentas.ToString("C")</td>
                    <td>@caja.TipoCuadre</td>
                    <td>@caja.UserName</td>
                    <td>
                        <input type="number" step="0.01" class="form-control dinero-efectivo" value="@caja.DineroEfectivo" disabled />
                    </td>
                    <td>@(caja.DineroEfectivo == caja.TotalVentas ? "Cuadrado" : "No Cuadrado")</td>
                    <td>
                        <button type="button" class="btn btn-warning edit-button">Editar</button>
                        <button type="button" class="btn btn-danger delete-button">Borrar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css">

    <script>
        $(document).ready(function () {
            // Inicializar DataTables para la tabla con paginación
            $('#cuadreTable').DataTable({
                "pageLength": 5,  // Número de registros por página
                "lengthChange": false,  // Desactivar opción de cambiar el número de registros por página
                "searching": false,  // Desactivar barra de búsqueda
                "ordering": true,  // Habilitar ordenamiento de columnas
                "info": false,  // Desactivar información de la tabla
                "pagingType": "simple"  // Paginación simple con botones 'Anterior' y 'Siguiente'
            });

            // Habilitar solo el campo de Dinero Efectivo al presionar el botón Editar
            $('.edit-button').click(function () {
                var row = $(this).closest('tr');
                var dineroEfectivoInput = row.find('.dinero-efectivo');

                // Habilitar el campo y establecer el foco
                dineroEfectivoInput.prop('disabled', false).focus();

                // Manejar el evento change para actualizar automáticamente
                dineroEfectivoInput.off('change').on('change', function () {
                    var nuevoValor = $(this).val();
                    var cuadreId = row.data('id');

                    // Enviar el nuevo valor al servidor
                    $.ajax({
                        url: '@Url.Action("UpdateCuadre", "Caja")',
                        type: 'POST',
                        data: { id: cuadreId, dineroEfectivo: nuevoValor },
                        success: function (response) {
                            if (response.success) {
                                // Usar SweetAlert para mostrar éxito
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Éxito',
                                    text: response.message,
                                }).then(() => {
                                    location.reload(); // Recargar la página para reflejar los cambios
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: response.message,
                                });
                            }
                        },
                        error: function (error) {
                            console.error(error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'Ocurrió un error en el servidor. Inténtalo de nuevo más tarde.',
                            });
                        }
                    });
                });
            });

            // Borrar el cuadre
            $('.delete-button').click(function () {
                var row = $(this).closest('tr');
                var cuadreId = row.data('id');

                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "No podrás revertir esto.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, borrar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("BorrarCuadre", "Caja")',
                            type: 'POST',
                            data: { id: cuadreId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire('Borrado!', response.message, 'success').then(() => {
                                        location.reload(); // Recargar la página para reflejar los cambios
                                    });
                                } else {
                                    Swal.fire('Error!', response.message, 'error');
                                }
                            },
                            error: function (error) {
                                console.error(error);
                                Swal.fire('Error!', 'Ocurrió un error en el servidor. Inténtalo de nuevo más tarde.', 'error');
                            }
                        });
                    }
                });
            });

            // Manejar el envío del formulario de realizar cuadre
            $('#realizarCuadreForm').submit(function (event) {
                event.preventDefault(); // Prevenir el envío normal del formulario

                $.ajax({
                    url: '@Url.Action("RealizarCuadre", "Caja")',
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Éxito',
                                text: response.message,
                            }).then(() => {
                                location.reload(); // Recargar la página para reflejar los cambios
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message,
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Ocurrió un error en el servidor. Inténtalo de nuevo más tarde.',
                        });
                    }
                });
            });
        });
    </script>
}
